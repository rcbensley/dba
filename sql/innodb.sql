-- Fragmentation
SELECT
	TABLE_SCHEMA,
	CONCAT(ROUND(SUM((DATA_LENGTH+INDEX_LENGTH)/(1024*1024*1024)),2) , 'GB') AS SIZE_GB,
	COUNT(*) AS TABLES
FROM information_schema.tables
GROUP BY TABLE_SCHEMA,ENGINE,TABLE_TYPE
ORDER BY 2 DESC;

SELECT
	CONCAT(t.TABLE_SCHEMA, '.', t.TABLE_NAME) AS TBL,
	ROUND(((t.DATA_LENGTH + t.INDEX_LENGTH)/1024/1024), 2) as SIZE_MB,
	CONCAT(ROUND(t.DATA_FREE/1024/1024),'MB') as DATA_FREE_MB,
	f.FRAGMENTATION
FROM information_schema.tables t
JOIN (SELECT
TABLE_SCHEMA,
TABLE_NAME,
DATA_FREE,
(DATA_FREE/(DATA_LENGTH+INDEX_LENGTH)) AS FRAGMENTATION
FROM information_schema.tables) f ON t.TABLE_SCHEMA = f.TABLE_SCHEMA and t.TABLE_NAME = f.TABLE_NAME
WHERE t.DATA_FREE > 0
AND f.DATA_FREE > 0
AND f.FRAGMENTATION > 5
ORDER BY 4 DESC;

-- tmp
SELECT * FROM information_schema.global_variables
	WHERE variable_name IN ('tmp_table_size','max_heap_table_size')
UNION ALL
SELECT * FROM information_schema.global_status
	WHERE variable_name LIKE '%_tmp_%';

-- Frag
SELECT * FROM
	(SELECT
		t.TABLE_SCHEMA,
		t.TABLE_NAME,
		ROUND(((t.DATA_LENGTH + t.INDEX_LENGTH)/1024/1024), 2) as TABLE_SIZE_MB,
		ROUND(t.DATA_FREE/1024/1024) as DATA_FREE_MB,
		f.FRAGMENTATION
FROM information_schema.tables t
JOIN (SELECT
TABLE_SCHEMA,
TABLE_NAME,
DATA_FREE,
(DATA_FREE/(DATA_LENGTH+INDEX_LENGTH)) AS FRAGMENTATION
FROM information_schema.tables) f ON t.TABLE_SCHEMA = f.TABLE_SCHEMA and t.TABLE_NAME = f.TABLE_NAME
WHERE t.DATA_FREE > 0
AND f.DATA_FREE > 0) AS f
ORDER BY F.DATA_FREE_MB DESC;


